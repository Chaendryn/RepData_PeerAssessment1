getwd()
if (!file.exists("./activity.zip")) {
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileUrl, destfile = "./activity.zip")
}
unzip("activity.zip", exdir="data")
rawData <- read.csv("data/activity.csv")
View(rawData)
str(rawData)
names(rawData)
rawData2 <- as.date(as.character(rawData$date), format="%Y-%m-%d")
rawData2 <- as.Date(as.character(rawData$date), format="%Y-%m-%d")
str(rawData2)
rawData$date <- as.Date(as.character(rawData$date), format="%Y-%m-%d")
str(rawData$date)
dailyStepTotals <- aggregate(rawData$steps~rawData$date,data=rawData,FUN=sum)
View(dailyStepTotals)
names(dailyStepTotals) <- c("date", "totals")
View(dailyStepTotals)
mean(dailyStepTotals$totals)
library(ggplot2)
install.packages(c("jsonlite", "swirl"))
install.packages("ggplot2")
R.Version()
R.Version()
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
install.packages("ggplot2", dependencies=TRUE)
library(ggplot2)
install.packages("Rcpp", dependencies=TRUE)
library(ggplot2)
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals)
dev.off
dev.off()
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="histogram")
qplot(dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="histogram")
qplot(totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="histogram")
qplot(date, totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals)
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity", color="green")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity", color="date")
dev.off()
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity", color="date")
dev.off()
g <- ggplot(dailyStepTotals, aes(dailyStepTotals$date, dailyStepTotals$totals)
)
p <- g + geom_point()
print(p)
g <- ggplot(dailyStepTotals, aes(dailyStepTotals$date, dailyStepTotals$totals), geom_bar(aes(color="red")))
print(g)
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity", fill="green")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity", colour="red")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity", colour="red", fill="red")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity", colour="black", fill="red")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity", colour=red)
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity", colour=totals)
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", geom="bar", stat="identity")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", title="Total number of steps taken per day", geom="bar", stat="identity")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
dailyStepMean <- aggregate(rawData$steps~rawData$date,data=rawData,FUN=mean)
View(dailyStepMean)
dailyStepMedian <- aggregate(rawData$steps~rawData$date,data=rawData,FUN=median)
View(dailyStepMedian)
View(dailyStepMedian)
View(dailyStepMean)
dailyStepMedian <- aggregate(rawData$steps~rawData$date,data=rawData,FUN=median, na.rm=TRUE)
View(dailyStepMedian)
dailyStepMean <- aggregate(rawData$steps~rawData$date,data=rawData,FUN=mean, na.rm=TRUE)
View(dailyStepMean)
aggregated1<-aggregate(activity$steps, by = list(activity$date), FUN = median, na.rm=T)
aggregated1<-aggregate(rawData$steps, by = list(rawData$date), FUN = median, na.rm=T)
View(aggregated1)
aggregated2<-aggregate(rawData$steps, by = list(rawData$date), FUN = mean, na.rm=T)
View(aggregated1)
View(aggregated2)
View(dailyStepMean)
dailyStepTotals <- aggregate(rawData$steps, by = list(rawData$date), FUN = sum, na.rm=TRUE)
View(dailyStepTotals)
library(ggplot2)
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
qplot(dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day")
dev.off
dev.off()
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day")
rawData <- read.csv("data/activity.csv")
rawData$date <- as.Date(as.character(rawData$date), format="%Y-%m-%d")
dailyStepTotals <- aggregate(rawData$steps, by = list(rawData$date), FUN = sum, na.rm=TRUE)
names(dailyStepTotals) <- c("date", "totals")
View(dailyStepTotals)
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
dev.off()
dailyStepMean <- aggregate(rawData$steps~rawData$date,data=rawData,FUN=mean, na.rm=TRUE)
dailyStepMean <- aggregate(rawData$steps, by = list(rawData$date), FUN = mean, na.rm=TRUE)
dailyStepMedian <- aggregate(rawData$steps, by = list(rawData$date), FUN = median, na.rm=TRUE)
View(dailyStepMedian)
str(rawData$date)
View(dailyStepMedian)
View(dailyStepMean)
aggregated1<-aggregate(rawData$steps, by = list(rawData$date), FUN = median, na.rm=T)
View(aggregated1)
aggregated1<-aggregate(rawData$steps, by = list(rawData$date), FUN = median, na.rm=T)
View(aggregated1)
View(dailyStepMedian)
View(dailyStepTotals)
dailyStepMedian <- aggregate(dailyStepTotals$totals, by = list(dailyStepTotals$date), FUN = median, na.rm=TRUE)
View(dailyStepMedian)
View(dailyStepMean)
dailyStepMedian <- aggregate(dailyStepTotals$totals, by = list(dailyStepTotals$date), FUN = sum, na.rm=TRUE)
View(dailyStepMedian)
rawData <- read.csv("data/activity.csv")
rawData$date <- as.Date(as.character(rawData$date), format="%Y-%m-%d")
dailyStepTotals <- aggregate(rawData$steps, by = list(rawData$date), FUN = sum, na.rm=TRUE)
names(dailyStepTotals) <- c("date", "totals")
library(ggplot2)
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
dev.off()
dailyStepMean <- aggregate(rawData$steps, by = list(rawData$date), FUN = mean, na.rm=TRUE)
names(dailyStepMean) <- c("date", "meanPerDay")
View(dailyStepMean)
dailyStepMedian <- aggregate(rawData$steps, by = list(rawData$date), FUN = median, na.rm=TRUE)
names(dailyStepMedian) <- c("date", "medianPerDay")
View(dailyStepMedian)
dailyStepMedian <- median(aggregate(rawData$steps, by = list(rawData$date), FUN = sum, na.rm=TRUE))
dailyStepMedian <- aggregate(rawData$steps, by = list(rawData$date), FUN = sum, na.rm=TRUE)
View(dailyStepMedian)
dailyStepMedian <- aggregate(dailyStepTotals$totals, by = list(dailyStepTotals$date), FUN = median, na.rm=TRUE)
View(dailyStepMedian)
View(dailyStepTotals)
dailyStepMedian <- median(dailyStepTotals$totals)
dailyStepMean <- aggregate(rawData$steps~rawData$date,data=rawData,FUN=mean, na.rm=TRUE)
dailyStepMedian <- aggregate(rawData$steps~rawData$date,data=rawData,FUN=median, na.rm=TRUE)
View(dailyStepMedian)
dailyStepMedian <- aggregate(rawData$steps, by = list(rawData$date), FUN = median(sum), na.rm=TRUE)
dailyStepMedian <- aggregate(rawData$steps~rawData$date, FUN = median, na.rm=TRUE)
View(dailyStepMedian)
dailyStepMedian <- aggregate(rawData$steps, by = list(rawData$date), FUN = median, na.rm=TRUE)
dailyStepMean <- aggregate(rawData$steps, by = list(rawData$date), FUN = mean, na.rm=TRUE)
View(dailyStepMedian)
dailyStepMedian <- aggregate(sum(rawData$steps), by = list(rawData$date), FUN = median, na.rm=TRUE)
median(sum(rawData$steps))
median(sum(rawData$steps) na.rm=TRUE)
median(sum(rawData$steps), na.rm=TRUE)
median(sum(rawData$steps, na.rm=TRUE))
View(rawData)
oneDay <- rawData[rawData$date < "2012-10-03", ]
View(oneDay)
daily <- aggregate(oneDay$steps), by = list(oneDay$date), FUN = median, na.rm=TRUE)
daily <- aggregate(oneDay$steps, by = list(oneDay$date), FUN = median, na.rm=TRUE)
View(daily)
View(daily)
daily <- aggregate(oneDay$steps, by = list(oneDay$date), FUN = mean, na.rm=TRUE)
View(daily)
View(dailyStepMean)
rm(oneDay)
rm(daily)
View(dailyStepMean)
names(dailyStepMean) <- c("date", "meanPerDay")
View(dailyStepMean)
mean(dailyStepMean$meanPerDay)
mean(dailyStepMean$meanPerDay, na.rm=TRUE)
median(500)
library(reshape2)
sD <- rawData[rawData$Date < "2012-10-06",]
sD <- rawData[rawData$date < "2012-10-06",]
View(sD)
meltD <- melt(sD, id=c("date"), measure.vars=c("interval", "steps"))
View(meltD)
dD <- dcast(meltD, interval ~ variable)
dD <- dcast(meltD, variable ~ variable)
View(dD)
View(meltD)
meltD <- melt(sD, id=c("date", "steps"), measure.vars=c("interval"))
View(meltD)
dD <- dcast(meltD, steps ~ variable)
dD <- dcast(meltD, steps ~ interval)
View(dD)
dD <- dcast(meltD, steps ~ variable)
dD <- dcast(meltD, date ~ variable)
View(dD)
meltD <- melt(sD, id=c("date", "steps"), measure.vars=c("interval"))
dD <- dcast(meltD, meltD$steps, date ~ variable, fill=0)
dD <- dcast(meltD, date ~ variable, fill=0)
View(dD)
dD <- dcast(meltD, mean, date ~ variable, fill=0)
dD <- dcast(meltD, mean, steps ~ variable, fill=0)
rm(dD)
rm(meltD)
rm(sD)
aggregated1<-aggregate(activity$steps, by = list(activity$date), FUN = median, na.rm=T)
aggregated1<-aggregate(rawData$steps, by = list(rawData$date), FUN = median, na.rm=T)
View(aggregated1)
aggregated2<-aggregate(rawData$steps~rawData$interval, by = list(rawData$date), FUN = median, na.rm=T)
tests <- rawData[rawData$date < "2012-10-06",]
View(tests)
tapply(tests, rawData$date, FUN = median, sum)
tapply(tests, tests$date, FUN = sum)
tapply(tests$steps, tests$date, FUN = sum)
tapply(tests$steps, tests$date, FUN = sum, median)
tapply(tests$steps, tests$date, FUN = sum, FUN = median)
tapply(tests$steps, tests$date, FUN = median(sum))
tapply(tests$steps, tests$date, FUN = median)
median(tests$steps[tests$date == "2012-10-04"])
median(sum(tests$steps[tests$date == "2012-10-04"]))
sum(tests$steps[tests$date == "2012-10-04"])
dnames <- rawData$name
dnames <- names(rawData)
tests2 <- as.data.frame(t(tests[,-1]))
View(tests2)
str(tests2)
head(str(tests2))
str(head(tests2))
tests2 <- as.data.frame(t(tests))
View(tests2)
dnames <- rawData$intrvals
dnames <- rawData$interval
tests2 <- as.data.frame(t(tests))
median(rawData$steps, na.rm=TRUE)
rm(dnames)
rm(tests)
rm(tests2)
rm(aggregated1)
ivStepAvg <- aggregate(rawData$steps, by = list(rawData$interval), FUN = mean, na.rm=TRUE)
View(ivStepAvg)
intervalStepAvg <- aggregate(rawData$steps, by = list(rawData$interval), FUN = mean, na.rm=TRUE)
rm(ivStepAvg)
View(intervalStepAvg)
names(intervalStepAvg) <- c("interval", "average")
View(intervalStepAvg)
library(ggplot2)
qplot(intervalStepAvg$interval, intervalStepAvg$average, intervalStepAvg, xlab="Interval", ylab="Average Steps Taken", main="Steps taken per interval averaged across days", geom="line")
View(intervalStepAvg)
View(rawData)
mean(dailyStepMean$meanPerDay, na.rm=TRUE)
View(dailyStepTotals)
mean(dailyStepTotals)
mean(dailyStepTotals, na.rm=TRUE)
mean(dailyStepTotals$totals, na.rm=TRUE)
median(dailyStepTotals$totals, na.rm=TRUE)
View(dailyStepMedian)
View(dailyStepMean)
mean(rawData$steps[rawData$date == "2012-10-02"], na.rm=TRUE)
mean(sum(rawData$steps[rawData$date == "2012-10-02"]), na.rm=TRUE)
tests
tests <- rawData[rawData$date == "2012-10-02", ]
View(tests)
mean(tests$steps, na.rm=TRUE)
mean(sum(tests$steps), na.rm=TRUE)
intervalStepAvg$interval = max(intervalStepAvg$average)
intervalStepAvg <- aggregate(rawData$steps, by = list(rawData$interval), FUN = mean, na.rm=TRUE)
names(intervalStepAvg) <- c("interval", "average")
View(intervalStepAvg)
print(intervalStepAvg$interval[max(intervalStepAvg$average), 1]
)
print(intervalStepAvg[max(intervalStepAvg$average), 1])
print(intervalStepAvg[max(intervalStepAvg$average), ])
max(intervalStepAvg$average)
print(intervalStepAvg$interval[max(intervalStepAvg$average),])
print(intervalStepAvg$interval[max(intervalStepAvg$average)])
print(intervalStepAvg$interval[,max(intervalStepAvg$average)])
max(intervalStepAvg$average)
print(intervalStepAvg[,max(intervalStepAvg$average) ])
print(intervalStepAvg$interval[,max(intervalStepAvg$average) ])
max(intervalStepAvg$average)
which.max(intervalStepAvg$average)
print(intervalStepAvg[104,])
intervalStepAvg[m,1]
m <- which.max(intervalStepAvg$average)
intervalStepAvg[m,1]
index <- which.max(intervalStepAvg$average)
max <- intervalStepAvg$average[index]
max
medianT <- median(dailyStepTotals$totals, na.rm=TRUE)
medianT
meanT <- mean(dailyStepTotals$totals, na.rm=TRUE)
meanT
median(dailyStepTotals$totals)
mean(dailyStepTotals$totals)
dailyStepTotals2 <- aggregate(rawData$steps, by = list(rawData$date), FUN = sum)
names(dailyStepTotals) <- c("date", "totals")
mean(dailyStepTotals2$totals)
mean(dailyStepTotals2$totals, na.rm=TRUE)
View(dailyStepTotals2)
names(dailyStepTotals2) <- c("date", "totals")
mean(dailyStepTotals2$totals, na.rm=TRUE)
dailyStepTotals <- aggregate(rawData$steps, by = list(rawData$date), FUN = sum)
names(dailyStepTotals) <- c("date", "totals")
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
cleanData <- rawData
cleanData[is.na(cleanData)] <- 0
View(cleanData)
is.na(rawData)
count(is.na(rawData))
complete.cases(rawData)
logicV <- !complete.cases(rawData)
length(logicV)
logicV <- !complete.cases(rawData$steps)
length(logicV)
length(logicV[i]==TRUE)
length(logicV==TRUE)
nrows(rawData[logicV,])
nrow(rawData[logicV])
nrow(rawData[logicV,])
nrow(rawData[!logicV,])
countNA <- nrow(rawData[logicV,])
head(cleanData)
dailyStepTotals2 <- aggregate(cleanData$steps, by = list(cleanData$date), FUN = sum)
names(dailyStepTotals2) <- c("date", "totals")
rm(dailyStepMean)
rm(dailyStepMedian)
rm(tests)
qplot(dailyStepTotals2$date, dailyStepTotals2$totals, dailyStepTotals2, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
meanT2 <- mean(dailyStepTotals2$totals, na.rm=TRUE)
medianT2 <- median(dailyStepTotals2$totals, na.rm=TRUE)
print(meanT, meanT2)
print(meanT)
meanT2
medianT
medianT2
dev.off()
rawData <- read.csv("data/activity.csv")
rawData$date <- as.Date(as.character(rawData$date), format="%Y-%m-%d")
dailyStepTotals <- aggregate(rawData$steps, by = list(rawData$date), FUN = sum)
names(dailyStepTotals) <- c("date", "totals")
library(ggplot2)
qplot(dailyStepTotals$date, dailyStepTotals$totals, dailyStepTotals, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
meanT <- mean(dailyStepTotals$totals, na.rm=TRUE)
medianT <- median(dailyStepTotals$totals, na.rm=TRUE)
intervalStepAvg <- aggregate(rawData$steps, by = list(rawData$interval), FUN = mean, na.rm=TRUE)
names(intervalStepAvg) <- c("interval", "average")
library(ggplot2)
qplot(intervalStepAvg$interval, intervalStepAvg$average, intervalStepAvg, xlab="Interval", ylab="Average Steps Taken", main="Steps taken per interval averaged across days", geom="line")
index <- which.max(intervalStepAvg$average) ## returns the index of the maximum value
interval <- intervalStepAvg[index,1]
max <- intervalStepAvg$average[index]
logicV <- !complete.cases(rawData$steps)
countNA <- nrow(rawData[logicV,])
cleanData <- rawData
cleanData[is.na(cleanData)] <- 0
dailyStepTotals2 <- aggregate(cleanData$steps, by = list(cleanData$date), FUN = sum)
names(dailyStepTotals2) <- c("date", "totals")
library(ggplot2)
qplot(dailyStepTotals2$date, dailyStepTotals2$totals, dailyStepTotals2, xlab="Date", ylab="Total Steps Taken", main="Total number of steps taken per day", geom="bar", stat="identity")
meanT2 <- mean(dailyStepTotals2$totals, na.rm=TRUE)
medianT2 <- median(dailyStepTotals2$totals, na.rm=TRUE)
medianT, medianT2
medianT
c(medianT, medianT2)
c(meanT, meantT2)
c(meanT, meanT2)
library(xtable)
install.packages("xtable")
library(xtable)
raw <- c(meanT, medianT)
clean <- c(meanT2, medianT2)
mtable <- rbind(raw, clean)
mtable
names(mtable) <- c("Mean", "Median")
mtable
name(mtable) <- c("Mean", "Median")
mtable <- rbind(raw, clean)
mtable
names(mtable) <- c("DataSet", "Mean", "Median")
mtable
col.names(mtable) <- c("DataSet", "Mean", "Median")
col.name(mtable) <- c("DataSet", "Mean", "Median")
names(mtable)
mtable <- rbind(raw, clean)
mtable
names(mtable)
str(mtable)
dimnames(mtable) <- c("Mean", "Median")
dimnames(mtable) <- as.List(c("Mean", "Median"))
dimnames(mtable) <- as.list(c("Mean", "Median"))
dimnames(mtable) <- as.list(c("DataSet, Mean", "Median"))
mtable
mtable <- c("Mean","Median")
mtable <- rbind(raw, clean)
mtable
mtable <- rbind(mtable, raw, clean)
mtable
mtable <- c("Mean","Median")
mtable
mtable <- rbind(mtable, raw, clean)
mtable
class(mtable)
mtable <- data.frame(c("Mean","Median"))
class(mtable)
mtable <- rbind(mtable, raw, clean)
View(mtable)
mtable <- data.frame(c("Mean","Median"))
raw
clean
mtable <- as.numeric(rbind(mtable, raw, clean))
class(raw)
mtable <- data.frame(c("Mean","Median"))
mtable <- rbind(mtable, as.numeric(raw), as.numeric(clean))
View(mtable)
mnames <- c("Mean", "Median")
mtable <- rbind(mnames, raw, clean)
View(mtable)
mtable <- rbind(raw, clean), names=mnames
mtable <- rbind(raw, clean) names=mnames
mtable <- rbind(raw, clean)
names(mtable) <- mnames
View(mtable)
View(mtable)
names(mtable) <- mnames
View(mtable)
name(mtable) <- mnames
colnames(mtable) <- mnames
View(mtable)
mnames <- c("", "Mean", "Median")
colnames(mtable) <- mnames
raw <- c(meanT, medianT)
clean <- c(meanT2, medianT2)
mnames <- c("Mean", "Median")
mtable <- rbind(raw, clean)
colnames(mtable) <- mnames
mtable
weekdays(cleanData)
weekdays(cleanData$date)
cleanData <- cbind(cleanData, "Weekdays")
View(cleanData)
cleanData <- cbind(cleanData, weekdays(cleanData$date))
View(cleanData)
cleanData <- rawData
cleanData[is.na(cleanData)] <- 0
cleanData <- cbind(cleanData, weekdays(cleanData$date))
View(cleanData)
names(cleanData) <- c(names(cleanData), "Weekdays")
names(cleanData) <- c("steps", "date", "interval", "weekdays")
View(cleanData)
cleanData <- cbind(cleanData, "Factors")
View(cleanData)
names(cleanData) <- c("steps", "date", "interval", "daynames", "whatDayType")
View(cleanData)
dayType <- as.Factor(c("weekday", "weekend"))
dayType <- as.factor(c("weekday", "weekend"))
str(dayType)
cleanData$whatDayType[cleanData$daynames %in% c("Saturday", "Sunday")] <- "Weekend"
View(cleanData)
getwd()
str(cleanData$daynames)
tail(cleanData)
cleanData[13000:14000,]
cleanData$whatDayType[as.character(cleanData$daynames) %in% c("Saturday", "Sunday")] <- "Weekend"
cleanData$whatDayType[as.character(as.numeric(cleanData$daynames)) %in% c("Saturday", "Sunday")] <- "Weekend"
cleanData[13000:14000,]
cleanData$whatDayType[cleanData$daynames == c("Saturday", "Sunday")] <- "Weekend"
cleanData$whatDayType[cleanData$daynames == ("Saturday" | "Sunday")] <- "Weekend"
cleanData$daynames <- as.character(cleanData$daynames)
class(cleanData$daynames)
cleanData$whatDayType[cleanData$daynames %in% c("Saturday", "Sunday")] <- "Weekend"
cleanData$whatDayType[cleanData$daynames %in% c("Saturday", "Sunday")]
cleanData$daynames %in% c("Saturday", "Sunday")
class(cleanData$whatDayType)
cleanData <- rawData
cleanData[is.na(cleanData)] <- 0
cleanData <- cbind(cleanData, as.character(weekdays(cleanData$date)))
str(cleanData)
cleanData <- cbind(cleanData, weekdays(cleanData$date), stringsAsFactors=FALSE)
str(cleanData).
str(cleanData)
cleanData <- rawData
cleanData[is.na(cleanData)] <- 0
cleanData <- cbind(cleanData, weekdays(cleanData$date), stringsAsFactors=FALSE)
cleanData <- cbind(cleanData, "Factors", stringsAsFactors=FALSE)
str(cleanData)
names(cleanData) <- c("steps", "date", "interval", "daynames", "whatDayType")
cleanData$whatDayType[cleanData$daynames %in% c("Saturday", "Sunday")] <- "Weekend"
cleanData[13000:14000,]
cleanData$whatDayType[!cleanData$whatDayType %in% c("Weekend")] <- "Weekday"
tail(cleanData)
str(cleanData)
cleanData$whatDayType <- factor(cleanData$whatDayType)
str(cleanData)
cleanData[13994:14000,])
cleanData[13994:14000,]
cleanData[13996:14000,]
head(cleanData)
intervalWeekAvg <- aggregate(cleanData$steps, by = list(cleanData$interval[whatDayType==Weekday,]), FUN = mean, na.rm=TRUE)
intervalWeekAvg <- aggregate(cleanData$steps[whatDayType==Weekday,], by = list(cleanData$interval), FUN = mean, na.rm=TRUE)
View(cleanData)
intervalWeekAvg <- aggregate(cleanData$steps[cleanData$whatDayType==Weekday,], by = list(cleanData$interval), FUN = mean, na.rm=TRUE)
intervalWeekAvg <- aggregate(cleanData$steps[cleanData$whatDayType=="Weekday",], by = list(cleanData$interval), FUN = mean, na.rm=TRUE)
intervalWeekAvg <- aggregate(cleanData$steps[cleanData$whatDayType=="Weekday"], by = list(cleanData$interval), FUN = mean, na.rm=TRUE)
intervalWeekAvg <- aggregate(cleanData$steps, by = list(cleanData$whatDayType, cleanData$interval), FUN = mean, na.rm=TRUE)
View(intervalWeekAvg)
intervalWeekAvg <- aggregate(cleanData$steps, by = list(DayType=cleanData$whatDayType, interval=cleanData$interval), FUN = mean, na.rm=TRUE)
View(intervalWeekAvg)
getwd()
intervalWeekAvg <- aggregate(cleanData$steps, by = list(DayType=cleanData$whatDayType, interval=cleanData$interval), FUN = mean, na.rm=TRUE)
View(intervalStepAvg)
